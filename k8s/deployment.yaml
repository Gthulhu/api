apiVersion: v1
kind: ServiceAccount
metadata:
  name: bss-metrics-api
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bss-metrics-reader
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bss-metrics-reader-binding
subjects:
- kind: ServiceAccount
  name: bss-metrics-api
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: bss-metrics-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bss-metrics-api
  namespace: kube-system
  labels:
    app: bss-metrics-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bss-metrics-api
  template:
    metadata:
      labels:
        app: bss-metrics-api
    spec:
      serviceAccountName: bss-metrics-api
      containers:
      - name: bss-metrics-api
        image: bss-metrics-api:latest
        imagePullPolicy: IfNotPresent
        args:
        - "--in-cluster=true"
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: bss-metrics-api
  namespace: kube-system
  labels:
    app: bss-metrics-api
spec:
  selector:
    app: bss-metrics-api
  ports:
  - port: 8080
    targetPort: http
    name: http
  type: ClusterIP
